buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'

version = '8.1.4'
group = 'torcherino'
archivesBaseName = 'torcherino'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

configurations {
    shade {}
    compile.extendsFrom(shade)
}

minecraft {
    mappings channel: 'snapshot', version: '20180921-1.13'
    runs {
        client {
            workingDirectory project.file('run')
            mods {
                torcherino {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            mods {
                torcherino {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            args '--mod', 'torcherino', '--all', '--output', file('src/generated/resources/')
            mods {
                torcherino {
                    source sourceSets.main
                }
            }
        }
    }
}
// for shading jankson
repositories {
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.13.2-25.0.205'
    compile ("blue.endless:jankson:1.1.2")
    shade ("blue.endless:jankson:1.1.2")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Torcherino",
            "Specification-Vendor": "NinjaPhenix1",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"NinjaPhenix1",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}